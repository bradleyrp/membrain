(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    135865,       2818]
NotebookOptionsPosition[    133623,       2739]
NotebookOutlinePosition[    133959,       2754]
CellTagsIndexPosition[    133916,       2751]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</home/rpb/worker-big/membrane-repository/pickle-repository/membrane-\
v614.md.part0002.skip10.fixed_z-framefilter/\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<PlotLegends`\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.56371892833074*^9, 3.5637189310718737`*^9}, {
   3.5637550303727818`*^9, 3.5637550352444687`*^9}, {3.5637552431862173`*^9, 
   3.5637552517427483`*^9}, {3.563757416468583*^9, 3.563757435955715*^9}, {
   3.563821996469136*^9, 3.5638219989170523`*^9}, {3.563840907165079*^9, 
   3.563840916982841*^9}, {3.5638786146676207`*^9, 3.5638786153726187`*^9}, {
   3.5912848443072433`*^9, 3.591284856117629*^9}, {3.591284923917285*^9, 
   3.5912849270221987`*^9}, {3.591284963255742*^9, 3.591284965979327*^9}, {
   3.591565221640195*^9, 3.591565226027277*^9}, {3.5915721613273993`*^9, 
   3.591572173798748*^9}, {3.5915757804005632`*^9, 3.591575782599255*^9}, {
   3.591616653566977*^9, 3.591616663758306*^9}, 3.5916168563042393`*^9, {
   3.591625136783742*^9, 3.591625138495327*^9}, {3.591626367214806*^9, 
   3.591626381232418*^9}, {3.591628755563019*^9, 3.5916287862429533`*^9}, 
   3.5916326517325077`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"framestotal", "=", "350"}], ";"}]], "Input",
 CellChangeTimes->{{3.591629014938218*^9, 3.5916290195254602`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"lenscale", "=", "1."}], ";"}]], "Input",
 CellChangeTimes->{{3.59162798286731*^9, 3.5916279850923653`*^9}, {
  3.591628788837826*^9, 3.5916287893792953`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rot", "[", "th_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "th", "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"Sin", "[", "th", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", "th", "]"}], ",", 
      RowBox[{"Cos", "[", "th", "]"}]}], "}"}]}], "}"}]}]], "Input"],

Cell[CellGroupData[{

Cell["Fixed axis", "Subsubsection",
 CellChangeTimes->{{3.591565520812821*^9, 3.591565536655588*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fx", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", "hpp"}], "*", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "xcpp"}], ")"}], "^", "2"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"2", "w1pp"}], ")"}]}], "]"}], "*", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y", "-", "ycpp"}], ")"}], "^", "2"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"2", "w2pp"}], ")"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.591285790000608*^9, 3.591285794506939*^9}, {
  3.591285941274954*^9, 3.591285941905944*^9}, {3.59144354654247*^9, 
  3.591443546733993*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fluid axis", "Subsubsection",
 CellChangeTimes->{{3.5915655133219347`*^9, 3.5915655351889057`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fx", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "hpp"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "-", "xcpp"}], ")"}], "*", 
           RowBox[{"Cos", "[", "theta", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"y", "-", "ycpp"}], ")"}], "*", 
           RowBox[{"Sin", "[", "theta", "]"}]}]}], ")"}], "^", "2"}]}], "/", 
      RowBox[{"(", 
       RowBox[{"2", 
        RowBox[{"w1pp", "^", "2"}]}], ")"}]}], "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"x", "-", "xcpp"}], ")"}]}], 
           RowBox[{"Sin", "[", "theta", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"y", "-", "ycpp"}], ")"}], 
           RowBox[{"Cos", "[", "theta", "]"}]}]}], ")"}], "^", "2"}]}], "/", 
      RowBox[{"(", 
       RowBox[{"2", 
        RowBox[{"w2pp", "^", "2"}]}], ")"}]}], "]"}]}], "+", 
   "zshift"}]}]], "Input",
 CellChangeTimes->{{3.591285795763443*^9, 3.591285806883253*^9}, {
  3.591285944730812*^9, 3.591286035918083*^9}, {3.5912860659666843`*^9, 
  3.5912860921927*^9}, {3.591443547955927*^9, 3.591443548516892*^9}, {
  3.591563718883106*^9, 3.591563728452156*^9}, {3.59156524248136*^9, 
  3.5915652431009073`*^9}, {3.591565486830998*^9, 3.5915654950931873`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"curvfx", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"fx", "[", 
            RowBox[{"x", ",", "y"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "1"}], "}"}]}], "]"}], "^", "2"}]}], ")"}], 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"fx", "[", 
         RowBox[{"x", ",", "y"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"fx", "[", 
            RowBox[{"x", ",", "y"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "1"}], "}"}]}], "]"}], "^", "2"}]}], ")"}], 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"fx", "[", 
         RowBox[{"x", ",", "y"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], "-", 
     RowBox[{"2", "*", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"fx", "[", 
         RowBox[{"x", ",", "y"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "1"}], "}"}]}], "]"}], "*", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"fx", "[", 
         RowBox[{"x", ",", "y"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "1"}], "}"}]}], "]"}], "*", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"fx", "[", 
         RowBox[{"x", ",", "y"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "1"}], "}"}]}], "]"}]}]}], ")"}], "/", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"fx", "[", 
           RowBox[{"x", ",", "y"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "1"}], "}"}]}], "]"}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"fx", "[", 
           RowBox[{"x", ",", "y"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", "1"}], "}"}]}], "]"}], ")"}], "^", "2"}]}], 
     ")"}], "^", 
    RowBox[{"(", 
     RowBox[{"3", "/", "2"}], ")"}]}]}]}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load parameters", "Subsubsection",
 CellChangeTimes->{{3.591565528073123*^9, 3.5915655320930233`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"filename", "=", "\"\<params.dat\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"OpenRead", "[", "filename", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramfile", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{"file", ",", 
     RowBox[{"{", 
      RowBox[{
      "Number", ",", "Number", ",", "Number", ",", "Number", ",", "Number", 
       ",", "Number", ",", "Number"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "file", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.5915652649720993`*^9, 3.5915652950081167`*^9}, {
  3.591565656516326*^9, 3.59156565808433*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{"filename", ",", 
   RowBox[{"FileNames", "[", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.591632902976101*^9, 3.591632925048068*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.5916329085537663`*^9, 3.591632925635253*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Framewise calculation of maximum curvature", "Subsubsection",
 CellChangeTimes->{{3.591565528073123*^9, 3.591565549725368*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dynamic", "[", "frameno", "]"}], "\n", 
 RowBox[{
  RowBox[{"curves", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"domains", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"regions", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"maps", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cplotzs", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"curves2", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"params", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"means", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dats", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "a", ",", "b", ",", "c", ",", "ap", ",", "bp", ",", "cp", ",", "w1p", ",", 
    "w2p", ",", "hp", ",", "xcp", ",", "ycp", ",", "w1", ",", "w2", ",", "h", 
    ",", "xc", ",", "yc", ",", "zshift", ",", "t1"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"frameno", "=", "1"}], ",", 
    RowBox[{"frameno", "\[LessEqual]", "framestotal"}], ",", 
    RowBox[{"frameno", "++"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Clear", "[", 
       RowBox[{
       "a", ",", "b", ",", "c", ",", "ap", ",", "bp", ",", "cp", ",", "w1p", 
        ",", "w2p", ",", "hp", ",", "xcp", ",", "ycp", ",", "w1", ",", "w2", 
        ",", "h", ",", "xc", ",", "yc", ",", "zshift", ",", "t1"}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"frameno", "\[NotEqual]", "3"}], ",", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"filename", "=", 
           RowBox[{"\"\<framefilter.\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"NumberForm", "[", 
              RowBox[{"frameno", ",", 
               RowBox[{"{", 
                RowBox[{"4", ",", "0"}], "}"}], ",", 
               RowBox[{"NumberPadding", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<0\>\"", ",", "\"\<\>\""}], "}"}]}]}], "]"}], 
             "]"}], "<>", "\"\<dat\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"FileNames", "[", "]"}], ",", "filename"}], "]"}], ",", 
            
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"file", "=", 
               RowBox[{"OpenRead", "[", "filename", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"rawfile", "=", 
               RowBox[{"ReadList", "[", 
                RowBox[{"file", ",", 
                 RowBox[{"{", 
                  RowBox[{"Number", ",", "Number", ",", "Number"}], "}"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"Close", "[", "file", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"datar", "=", "rawfile"}], ";", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "a", ",", "b", ",", "c1", ",", "c2", ",", "w1", ",", "w2", 
                 ",", "t1"}], "}"}], "=", 
               RowBox[{"paramfile", "[", 
                RowBox[{"[", "frameno", "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"curvfx2", "[", 
                RowBox[{"x_", ",", "y_"}], "]"}], "=", 
               RowBox[{
                RowBox[{"curvfx", "[", 
                 RowBox[{"x", ",", "y"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"hpp", "\[Rule]", "b"}], ",", 
                  RowBox[{"xcpp", "\[Rule]", "c1"}], ",", 
                  RowBox[{"ycpp", "\[Rule]", "c2"}], ",", 
                  RowBox[{"w1pp", "\[Rule]", 
                   RowBox[{"Sqrt", "[", 
                    RowBox[{
                    RowBox[{"Abs", "[", "w1", "]"}], "/", "2"}], "]"}]}], ",", 
                  RowBox[{"w2pp", "\[Rule]", 
                   RowBox[{"Sqrt", "[", 
                    RowBox[{
                    RowBox[{"Abs", "[", "w1", "]"}], "/", "2"}], "]"}]}], ",", 
                  RowBox[{"zshift", "\[Rule]", "a"}], ",", 
                  RowBox[{"theta", "\[Rule]", "t1"}]}], "}"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"curves2", ",", 
                RowBox[{"Max", "[", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"curvfx2", "[", 
                    RowBox[{
                    RowBox[{"lenscale", "*", 
                    RowBox[{"datar", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
                    RowBox[{"lenscale", "*", 
                    RowBox[{"datar", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "datar", "]"}]}], "}"}]}], "]"}], 
                 "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"regplot", "=", 
               RowBox[{"ListPlot", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"lenscale", "*", 
                    RowBox[{"datar", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
                    RowBox[{"lenscale", "*", 
                    RowBox[{"datar", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "datar", "]"}]}], "}"}]}], "]"}], 
                 ",", 
                 RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
                 RowBox[{"PlotStyle", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006", "]"}], ",", "Gray"}], 
                    "}"}], "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"regions", ",", "regplot"}], "]"}], ";"}], 
             "\[IndentingNewLine]", "}"}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
     "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.5641073228263474`*^9, 3.5641073228268757`*^9}, {
   3.564145165380185*^9, 3.564145168931903*^9}, {3.591284981456917*^9, 
   3.591284981973648*^9}, {3.59128610867782*^9, 3.591286126598136*^9}, {
   3.591286309760108*^9, 3.591286373950335*^9}, {3.5912864427126293`*^9, 
   3.591286459813477*^9}, {3.591286497042017*^9, 3.5912865121287127`*^9}, {
   3.5912865563945312`*^9, 3.5912865723326893`*^9}, 3.5912866106607723`*^9, {
   3.591286700543934*^9, 3.59128678823706*^9}, {3.5915653168742437`*^9, 
   3.59156538671708*^9}, {3.591565416735187*^9, 3.591565463183653*^9}, {
   3.5915655801924133`*^9, 3.591565662668879*^9}, {3.5915658678651533`*^9, 
   3.591565870418318*^9}, 3.591566141826601*^9, {3.591566598018579*^9, 
   3.5915666293766947`*^9}, {3.5915724934789267`*^9, 3.591572497229267*^9}, {
   3.591573246778796*^9, 3.5915732502409163`*^9}, {3.591573419227911*^9, 
   3.591573429977559*^9}, {3.591573744161332*^9, 3.5915737483640213`*^9}, {
   3.591616959206633*^9, 3.591616964816161*^9}, {3.591628004194278*^9, 
   3.591628007786497*^9}, {3.591628219115522*^9, 3.59162823309711*^9}, {
   3.591628977984022*^9, 3.591628978471624*^9}, 3.591629022700458*^9, {
   3.591629145839665*^9, 3.59162915761928*^9}, {3.591632658756239*^9, 
   3.591632691734358*^9}, {3.591632859481805*^9, 3.59163286965005*^9}, {
   3.591632929668825*^9, 3.591632944788468*^9}, {3.5916329978828487`*^9, 
   3.59163300106487*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`frameno, StandardForm],
  ImageSizeCache->{57., {0., 8.}}]], "Output",
 CellChangeTimes->{{3.591286514281106*^9, 3.591286542630632*^9}, 
   3.5912865732107487`*^9, 3.5912866121611223`*^9, 3.591286677079818*^9, {
   3.591286737995579*^9, 3.591286803596242*^9}, {3.5915656249742517`*^9, 
   3.591565633857235*^9}, {3.591565671625806*^9, 3.591565681570015*^9}, 
   3.591565871011001*^9, 3.591566142958452*^9, {3.5915666167419643`*^9, 
   3.591566631255259*^9}, 3.5915721786682577`*^9, 3.59157249838875*^9, 
   3.591573251616049*^9, 3.59157343686691*^9, 3.591573748543314*^9, 
   3.591575790806737*^9, 3.59161686855304*^9, 3.591616967517119*^9, 
   3.591617740489654*^9, 3.591625147472044*^9, 3.591626389167351*^9, 
   3.591628009026763*^9, 3.591628238355073*^9, 3.5916288033086023`*^9, 
   3.59162901050921*^9, 3.59162907019029*^9, 3.591629157937994*^9, 
   3.591632673102372*^9, 3.591632765404273*^9, {3.591632945208886*^9, 
   3.591633001261928*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"regions", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"frameno", "=", "1"}], ",", 
    RowBox[{"frameno", "\[LessEqual]", "framestotal"}], ",", 
    RowBox[{"frameno", "++"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Clear", "[", 
       RowBox[{
       "a", ",", "b", ",", "c", ",", "ap", ",", "bp", ",", "cp", ",", "w1p", 
        ",", "w2p", ",", "hp", ",", "xcp", ",", "ycp", ",", "w1", ",", "w2", 
        ",", "h", ",", "xc", ",", "yc", ",", "zshift", ",", "t1"}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"frameno", "\[NotEqual]", "3"}], ",", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"filename", "=", 
           RowBox[{"\"\<framefilter.\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"NumberForm", "[", 
              RowBox[{"frameno", ",", 
               RowBox[{"{", 
                RowBox[{"4", ",", "0"}], "}"}], ",", 
               RowBox[{"NumberPadding", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<0\>\"", ",", "\"\<\>\""}], "}"}]}]}], "]"}], 
             "]"}], "<>", "\"\<dat\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"FileNames", "[", "]"}], ",", "filename"}], "]"}], ",", 
            
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"file", "=", 
               RowBox[{"OpenRead", "[", "filename", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"rawfile", "=", 
               RowBox[{"ReadList", "[", 
                RowBox[{"file", ",", 
                 RowBox[{"{", 
                  RowBox[{"Number", ",", "Number", ",", "Number"}], "}"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"Close", "[", "file", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"datar", "=", "rawfile"}], ";", "\[IndentingNewLine]", 
              RowBox[{"regplot", "=", 
               RowBox[{"ListPlot", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"lenscale", "*", 
                    RowBox[{
                    RowBox[{"datar", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "/", "10"}]}], ",", 
                    RowBox[{"lenscale", "*", 
                    RowBox[{
                    RowBox[{"datar", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "/", "10"}]}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "datar", "]"}]}], "}"}]}], "]"}], 
                 ",", 
                 RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
                 RowBox[{"PlotStyle", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.06", "]"}], ",", "Gray"}], 
                    "}"}], "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"regions", ",", "regplot"}], "]"}], ";"}], 
             "\[IndentingNewLine]", "}"}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
     "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"postraj", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"paramfile", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "3"}], "]"}], "]"}], "/", "10"}], ",", 
       RowBox[{
        RowBox[{"paramfile", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "4"}], "]"}], "]"}], "/", "10"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "paramfile", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lptraj", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"postraj", ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"ClippingStyle", "\[Rule]", 
      RowBox[{"Opacity", "[", "1", "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"PointSize", "[", "0.015", "]"}], "}"}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<X (nm)\>\"", ",", "\"\<Y (nm)\>\"", ",", 
        "\"\<Gaussian Center locations\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
     
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"14", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "Bold"}],
        "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotregions", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"regions", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "regions", "]"}], ",", "100"}], "}"}]}], "]"}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"lptraj", ",", "plotregions", ",", "lptraj", ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.591566479929006*^9, 3.591566498217037*^9}, {
   3.5915666379616957`*^9, 3.591566668663012*^9}, {3.591566728850802*^9, 
   3.591566741595921*^9}, {3.5915672242451477`*^9, 3.59156726405409*^9}, {
   3.5915730016532993`*^9, 3.591573013175234*^9}, {3.591573662544867*^9, 
   3.591573705123926*^9}, {3.591617483989809*^9, 3.591617491108364*^9}, {
   3.591628375901945*^9, 3.591628376185362*^9}, {3.591628510095077*^9, 
   3.591628515444633*^9}, {3.591628989683749*^9, 3.5916289940239773`*^9}, {
   3.5916297648845453`*^9, 3.591629846911257*^9}, {3.591632705626307*^9, 
   3.591632763135626*^9}, {3.591632952120535*^9, 3.591632955882698*^9}, 
   3.591633013199588*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {Hue[0.67, 0.6, 0.6], PointSize[0.015], PointBox[CompressedData["
1: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
      "]]}, {}}, {
    {GrayLevel[0.5], PointSize[0.06], PointBox[CompressedData["
1:eJx1kyGKQmEURi/WSWKdMsEkFh+DiIhvDa5ABME2WzCb3IELcAcWoxuQB4Ig
iuElm0EQnk44fzjDhJ+Pkw7fvff/mvyMprWIyN/vN+/tyFfXLHcuP2N8OX8n
bn3EvHnqJt49qtXs2Es8Lqvt+tBP/Cyq060YJF5kEZ39MHGjHstNmf/xwE78
MH4YP4wfxg/jdy97YCd+GD+MH8YP4/cc3cse2Ikfxg/jh/F7b56je9kDO/HD
+GH8vhPvzXN0L3tgJ34Yv+/Sd+K9eY7uZQ/sxE/+9y98p74b79FzdU97X1Mu
4V0=
      "]]}, 
    {GrayLevel[0.5], PointSize[0.06], PointBox[CompressedData["
1:eJxd0q1KREEAhuGDQUwbDTbtrsoqIro41yDoBQi7SVjEaPAajGdtmrSZTXaD
TQTxB0RUMNp1wzPhC4ePNz3MzJnfH+0MppqmKf/fZPurbXvwsFTG3eb14qNX
9PNtezn3vlZ7Ybd3dPq2Xnvwebc187JR++p4OH3ytFn7p9Pc/z72ay+fT3a7
9s24vT78LmXvbDi7+LVSfc3XfM3XfM3XfM3n5vI1X/M1X/M1X/PT0bl8zdd8
zdd8zc9zpaNz+Zqv+Zqv+XmPea50dC5f8zVf8/Pd8h7zXOnoXL7ma37+J/lu
eY95rnR0Ll/z/wBq79lF
      "]]}, 
    {GrayLevel[0.5], PointSize[0.06], PointBox[CompressedData["
1:eJxl0rEKQVEAxvETGTzBHWU0oZsk5K7KTXkCKRmlvIfNQ3gEkclguGVQt0hd
yWBQNpuD4X+Gz6DTb/n+nXPlB+PeMGWMaXx/vzNpG7OOioH/srl54gc49Mxz
cq44T3d2Ex6rzrO7nRXimvMia/qZQ915WzCly74ZeLHtLq9lt4/Zx+xj9jH7
mH129WQfs4/Zx+xj3X+crF1FLef02446t+Cvg/Wkj+lj+pg+po/p6720g/Wk
j+lj+pg+pq/vqPfSDtaTPqaP6WP6+t30HfVe2sF60sf0MX39n+h303fUe2kH
60kf0/8Avc3LFQ==
      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], PointSize[0.015], PointBox[CompressedData["
1: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
      "]]}, {}}},
  AspectRatio->Automatic,
  Axes->False,
  AxesOrigin->{0, 0},
  BaseStyle->{14, FontFamily -> "Helvetica", Bold},
  Frame->True,
  FrameLabel->{
    FormBox["\"X (nm)\"", TraditionalForm], 
    FormBox["\"Y (nm)\"", TraditionalForm], 
    FormBox["\"Gaussian Center locations\"", TraditionalForm], 
    FormBox["\"\"", TraditionalForm]},
  ImageSize->500,
  PlotRange->{{-65.8874521108, 98.30217199879999}, {-56.760012088325, 
   79.269358216195}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.5916327098697977`*^9, 3.5916327578035927`*^9}, 
   3.5916329576799173`*^9, 3.5916330273944197`*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
17po1BodcsZhcyFdvPpNZ6Szls/iEZL+H+5L228=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"curves2", "*", "10"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"PointSize", "[", "0.015", "]"}], "}"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Frame\>\"", ",", 
      "\"\<Curvature (\!\(\*SuperscriptBox[\(nm\), \(-1\)]\))\>\"", ",", 
      "\"\<Curvature\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"14", ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "Bold"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.591629321491117*^9, 3.591629327810796*^9}, {
  3.591629394980241*^9, 3.5916293953205338`*^9}, {3.591635839185779*^9, 
  3.591635839569338*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], PointSize[0.015], PointBox[CompressedData["
1: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
Smv6w9n3Qr0EJiZZGkk/quC//dvmHg==
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{0, Automatic},
  BaseStyle->{14, FontFamily -> "Helvetica", Bold},
  Frame->True,
  FrameLabel->{
    FormBox["\"Frame\"", TraditionalForm], 
    FormBox[
    "\"Curvature (\\!\\(\\*SuperscriptBox[\\(nm\\), \\(-1\\)]\\))\"", 
     TraditionalForm], 
    FormBox["\"Curvature\"", TraditionalForm], 
    FormBox["\"\"", TraditionalForm]},
  ImageSize->500,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.591629328284124*^9, 3.59162939574053*^9, 
  3.591629852297741*^9, 3.5916329658289623`*^9, 3.5916330350336246`*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztfQd8FEX7//f6XcpBQiAhgdB7QgAp0kIHkdBREWxYkPeVV6yIAhb0fVUE
ERBeQF5EBYE/yGsBQVEpShMpgjQJQRMgQEJ6vZT7b7+9y+zs3CX4w/ejH2+z
zM489TvPzDw7uzt80jNTHvnHpGf+9tCkxkOemvTElL899HTjwdOe4opMBsBQ
wP1GNQZ/7gbkg5v7313IH/gS8vkV4Y8Z7pxd6Fuba1W7L3bluC3kYrNQHIXS
i59j1qgERIdYYLbXQoOOw/HM4iXo7FSqCjV9mrOWGYVCB3csR/aPK/HUqK5o
GhEMq9kGZ3Q79J0wAyt2paGk0o0zgehhEoqbw12agkVdQ2Ew18Ptiw8gPT8P
aQdX4IGWQTCiRnQRy9yVyN33LOKCjXA0exCrj1xDsasIWb8fxY7Vr2JS0kTs
z3VXQxeuOPd7DI3gpK7VC1szK0Ub1kfB4cfR1FqDqpSlYdWtThhMURi74zoq
ubLzgcsdC7frApZwBI2mcCTO2Y5zWSUCUXfWDiQGKiSpLG8fRtXj7OO8FRvS
K1L8lLkPvsmS8G+BK/1rzH1wINrHhiPIYoSB63gCXhABQ1h/ghx98G2WVJa9
U01SqdcvzOAtb+5ejKxntApkTTCED8Ju6dJptewmDxfuP4t85CmlSuX2Vph9
qljoUHzvdWd9gz5cuaXhg/ipwEfSoDi8lVwqlFVe+xw9a4llb54Ty9zXv+La
GrzEcZel4j2+FznaYM6ZEqNku/LLa8GVwt7yBZwsZgK31VMcGoeXXlmMLScz
+W4u0mzGsUrHZ8/PxL+3Hec6qwuugovY924SIi02NJmyF7mVPupwJGPu/gAn
swuR9tlExFjEsgYTPhTKUv87gSszICj+DZwrkTtrBbL3TENrhwV1+s3BtuQs
FGScwJrJzeGw1EPS6jS43GyRp7ZX8XeXzmLNE7ehTWQIzOEDJANW4Oqnw1DX
xNXhcGSyO1G/dS+Mn70JyUVSN3Z6yDhvwYI3JiOxWRjstlDUTxiF2Zv3Y/3M
0egUEwqrzYnYbvdjyc/5fC8Sm9u5Yxky9izEo4PiEe20w+IIQ6POozFj3RkU
VrrPUlURzOLwswoJliZvgPNHI314+r86j1PsVomiX9dj+vAE1A+1wRYajQ4j
nsOGc0W8eXvKA1VlCVJ3Lsf08YloG+2EzWyBIywWHYY8gre2pwoDlZGN5C0E
65mEY4jPkOLWI8XIsT0rR30lGTnGaSIkuMqwSSHDatJ4FnY158HB3hAqv/op
7m7ATVw6zcKOtAIUpO3AzI6hsDWYiM+vlYsQqsOF+/2YOOx+vLLqKxz9PRvF
ZSXIOLERT3euBZMlGuPWXUKZ5HcdkuhCm73pSmRkq9aBNqzXrD5x8uBQkYN9
r/RCGAdPgy0W499PRrFbCrU1pVc8nZn5BugnIaad8CeIOxbj1KxWsJvqYdS3
WeJsiMNc1jcjUM9kR+vZp3hJ+kpDQ/HJWWhl50f5mThV7GZt3pnmvwhWKqz1
EsjcHNXTwQOMXBz8Zx+EC75qgDtW/oriyhulSzydazV1GqQGA2ew0mTMjw/i
YlUHvHvBJU+uXBcWowMXvoLi38b5UgkLXGi6vh29uSmbMWIovs91M7amQkFD
BLsvEUZeVCAEqoDaI4de7486Zs4j1miMXnYGRfKwVMOKtKfztFdLIV8Q5B3A
HVEmYW23JaNSblSZsQW9ONqmqDtxIE8BQeHP09HCxgNvlgg8ptZ6ICARsfsS
YeSlA4LAFBAdEsw5JA+H5w5EhJlbplgicdtbh5FXIS8CvSihJtSwanG0VUsd
Xwjk7MagcIOwbPwu2wPp7G+FtRy/HtuT4+4hxR5+dLpnxMP415pdOJmej9LS
PKTu/w8mtw2G0doAd224LI5OTFT1oEEiYvclwshLAxqmG6JYgjziVubj2Pwh
qMstBWGuhxEfXdSmEqhmHeTRSItZjapGiSBKdojH3FY15hT4yMY3WhAaYofZ
bENo3WbonPQY3vn2EkrdVbuTNlU/IotCxO5LhJGXHnxqVDHRo/zyLw8HX2iL
IM4p9tYv4nRxFQqonlod5VkniVNgOkGDVZX5x3llvFr6m2q8WqIer3qQzW71
i4juNIRAxO5LhJEXFSfV1KOjvNC4+AG6hHI9ss4QMUzUpAKdtJhUR3Iv34sL
kdOzW3Mz1kiM/k41Y/12pDhjffE0P2OlOp+ZCsN6hIEKa71A/M+sigiAKJSl
/ge3hAC2Zk/ieBGzbKz1ZAhUYVMt4SUMKOmLa1/gnoZcROk0E1+n5iM/9Wu8
wK1d7bH3cZMXKX1RxWA2ttaiBlzlnL0Y23MwHnppJbb/sAk9Vbl7MxspI1u1
eAaOGiBg1ClODtW5+zB+8HjMWPIp9p29ivxSF/J+24m3R9WH1VwHg5amKKFZ
hyT8Us7JzjogBX3yW0I2LHkjnh/ZETFOO+zOGHQa9Tw2nVelSL2Tb2ZaPlOb
lIIWtwuZJ7/Cf15+GEPiImA1VEWLDikjW7V4Bo6mmlMwTplPlOLqkf/i7cdH
o3vLegi1mWELjULrXndj9v87jQLfZGQNKRrCxNntQY4lMD0lBNVUsr41/0e4
5f0lf4hUlUqJbFkuM6EshLEsuBpt/6JXPXo3kyxCmfEvoP1P0ruZZKkCtAbC
H937TyTskcqGMJYNrkbb7oSyut7a6Nwc+ZNoEyP8Yb53Y6JoVV5egaIiF/Lz
S7lRPj+/hLvCn/Nn4q9ULDZ5FRuRk1NMrW9TinnypaXl3K/Mh5XDt6lUt0yo
L9Zl4VUTxX8MF24So1ZTy/KSyYy8e4yCMcyKWfifUCwhmnOg2lraJERnywCQ
1+pyey+yJFwQAMBFDZLDZA1ldipaVNtYtSCj8k2UJkxocPOjvqiYVYsUVYEg
Jjx7IS5ATpYq4vNG1nYeDXY2qolu2q5047iouw5nOdlaar8GwqBqtCN5/mYx
nklBBW+FIL3BiPXeMWkskssuXszFqJEfoU/v5YgWjib06/uecMb/bErZCqWs
J6HMKhwtGDtmrUKP//G0jMKZGXfe8THS0/MEnmPHrLFJDX2b8NUuXswRA6jV
K4DyP6k1iShHJYggm0k6cq1w9OhlgZmToKuF0NYiHdX1RL1WqGzjuWYmlIUS
6DoI9ULIKlkJzc2EssGKmmsxYviHwr/qE9i0UpmDZyPPOfWwxnRTk4Q1o2rY
GzXyA/RJFAQxCieiJkKRutjiXSxeArWJqri3LgOjjAy5eiI79cCLq6dVwMVG
TQmkc5MMKo/x+HMZZXfewffQD1XCmrxsXcWYSpndC3kysOUJCkfTrGB+rS42
ZK+ZvWRXySn0hoCgYvLVKlHWwOrLTD73GJWlosl/iFKRayFyC4QLGRE0v6jg
RLIYWTT/NK2iyJ+vKxK6yI0T3xPBbk7beSLJx8qAbmMYc5h2QghjjrwBfd/e
35V4M0czLnkk4et3JdT7TSo7ceKK90BmUSVsSGOj9j1+7bHRhMOHL3IMlyki
LpMNKZQtkwzJnVh8ihmaqIuXk4s9tZVYrlRfxk494OJqahVosVFbAvFcGRg9
xuPPxcpWr6qqc3nCqW5lV+FJdLbUVzTkM3mcYfblQ2tH08aoEJajk1RBGcHI
+njMxFLRVEUwXdBRsWghcguEC9kqFk8FglU0L2jI5Z+aVbX40/UstWmWq212
Q8SvAuSby3byWu2nQxd9sn4663iWzTu08YMfysaOERfRz0hC8P/mF3n8v+R1
sTokmVXCiu3XyCGJaxouXVUvMesTqPRVWqxS+K5hH+SZt63QshjJ5zIxaoS4
QJGzGH0TPXLLK/W+fapmMdT15CzG8GGrlQWPoCPXTo7FfPmFC1kCTyWLQW5i
lq6pDSI1I5LjVAgiSCoPJ8OTVmPP7hRBUydBeguhrYNQZiG0NRPKQmn0VPVC
yKpYaWz6+OQtjLwBSa6TsxW88jxxnWyFctOJvsWFdtOpuLiM45SNY8fSOS+d
OZPJXeHP+TP+x52LxSavYiN+/PEitb5NKebJX76ch+zsYh9WDt+mwnW+Hl+f
P2fjVRPFfwwXDo5qNbUsL5nMyLvHKBjDrJiF/wnFou95B6qtpU3CipO/XFVi
JP+TMCzvEJNJeXEgQYSABa5fkHwnK8vT4KmpaFHNZNVCj8pNDk3E8OXf7Dgv
6GeUevfwpA+wffuvmvVJSBU1s2qhmKpBEBO2vdAXICdLFfl5K2t7jwZBG9Wm
N223unFc1N2Is5xsLbVfA2FQNfJp4u8mMJ7Jqx9TbtV47enQ3jFHGpDeIAeh
HuTidG0ZSBuYhOPnN6CNcGUy+U63UHuwUouyv+oRaeos3e1R4rOUQq5Fod/Z
P6UeVs2g5QmcPONSp6tC6BIJxG4JjLU6ZyXPkNR5pyBNES1eIsp5ddLeg7fJ
FhtILh4ZmCJyYsN3deGrSFWFzYrCXvf3TF73DObTXdCffjmSrGqAPpMXTGq4
qOf5wTomkX1JyoxOJUsaw4jUPoz1Iuj26uSfYeQeKy9wfGZUZrJOFgZz8mix
ErrF3+nyRzP2rkTGeuGMZu3AEiBj6d3RJ7ab6ZrK70fQML1wlcMhKTkRR3NL
leIOjCaIYowHiYz1whldFM8ytDSkG/N2Rh3NZFd5J2S040McXQoT/XICo0Ei
GaXpw1ivDqPDEgh2p8SOBow2v01TbYuX2rSBULasRmeJ1xTFe6ylxe94RitF
0UXpT79cl9FnevFIwxd60BqiqaTFS0kZwaQBXaMPtWcQQWtQiGO0SjSZtUYA
jqS7ws+hsoGm6bzxMURTF++cIg2LXRh48ddIg0M8XeuXybbyc0LVgNFhQ+nC
yHFXD7ad/bCpkhD3ESWBrPij5EFzuH/2aEjXM4nMW86E60GqC526TnB8jz4q
JfmnaSxZlXGMgOhGbm4hF7/HOMTcrqODcOU5upnakIGwxZ/IqjeLmUFWsw3d
Q18wwmSof57UWFyyzpgnkZsnqZrTgKDnMp9LOqvIMEYv3c/SF3S6MbPM8xgt
WYvRvw3JFu/NyGYYGXx+Rrp5jJZ2UnHwkSKVzsS+FyO79wLTQs/ksmuEu2PS
dmd5TjRmtGcrLutcuAcj3wDV0et0tVX1Ro7QFjOG0erdGfmuZInPT5LhrTPf
Zl1lRjNaviNZCgtdipUs0f8JOtSjyP2TdfUWzeiLjnQpNEbi97U9KGO/6ptK
TV6PoJP2Akxj7DfxjMo1oLupEyO7j7W1lec/xNd5kJVjSoBoC92I7JFbGKmv
rVFd9FDYnizsXYzNa1ZYPbTMZaxXM3CQu7+Gm+fTL68PTAZh4+s0slPuJYc6
kgsLCkpJaZnVCotIv83xMz0OJdAv1wxQjjHGgzjGeh/VqFR6PbsdY70PtaUS
B3r6i3dIIr5Chs4wxm7ejrEei+SUl8CQJH+Zjit1Ilk/E6xfj4II0hThJUag
6eRVEuiXKZ2HJpQezoaSw0xHcjElqHrmhDJrPaAIx1ZKM8okTG1hmuOE2m39
M5SMLQ2zC5Xi/CMpdzQf4wkX4/0jdZbcZ3/xj8pcMpXb6d3qhH9M3qRTk+8o
6PWSn/3j+gaV7FqFrPyyCr3+cEyHvXDlDQIxz6MIK7B7d4oXU72ecISlE7zh
SyzRQ4xf5sqaDmLsLBRDizGYf4dwKdJ3L8OTY7qjRb1Q2Cw2hNZrge5jnsSy
3enCm8/q6ziF3/vGM7cQjD2I3vcoAJTvZrsrC/Dz/KGItBiUL2MYLFG4ff7P
whu2oggk3pTKvvj8FNUrg8ndmNL3xLssoeC3IOX/+CRaOGyIHjANS7cexoXr
hXCVu1B4/QIOb12Kaf2jYXO0wFOHhM+LKDcQSZLyduQzF9S411hPLu5YmYlt
w+ojeuzHSHN5Ps3jSsXasdGoP2wbMivdJEnmMkTJpnoCcO4qOILJreLx8pkS
ZcN68ZmXEd/qURwpIBvhLUo0bcbAMmc3BjZJxPbrnj3ylde3I7HJQOGrMZFK
3xOaf+rbFRU6ud/j9sZd8H5amUKnLG0VujQehh9yyaLPJ8dd2p4qp55G3LHw
GKY2i8Hwr4RvRile5ECXuT0JMc0fx8+FRC/Oo4foUPplgUYog3wVV7CxR23U
TlyJVG+UvdebK+65EVcqiPI9RzaMOgNGGzq0d2951xOYkd4nRRlnptNtI+cc
9YYXB2M94UjZ7EgS8VlG9WUX6o1KDsZ6erLKvUWdaxI/8cW/3NEAgzkYMbc+
gg/OF5PC9bOMJgtRqU8b94IY6+mhxFctg8HIqWUymbiByGQSv2TGK1q7z1pc
KicHiGcZTSz3TI3wq3NZr+OGSt2uougKDiwcgLrRY7Avz+2JjM8ymkwObD6h
WqNYkCHEN97KAZB/pDexWZJmbJ3OoHNXbZ1lNiVn/4ku3RchxUVm8xxF9m7a
5EUwcqGvvBDpR9bj6R6tcOfmKyhXAVDvq15GAvnXyRHSs5Ri74Iklg7JqBpf
7CE9Y/YvemAUKrWsvmRBimTEL8WQsgb/9Gc4aK4tYkMVa8LnSSwU1kxhnjKJ
iVVYEz+LQdrLLrPWCykaGw/HkIu/r74H5SCl8dEGz7sFXmWMNvLtHQ3kjaJf
/k7hF+mfHk6ZOeEDAqTbJXIH0QhUVpW2NJQOZ6y3S9tTdjnO55/AmoWrsO2X
qyiqcNeVXe79/nuSLs+Q0SG7Vi7OzS1BWlqOHCxly+r1hiTGejsZwFiZjd2P
DcHcsyWQt6P7vNydpN/TdMwE0y/LT0vqdb0kxnpfkK1NeShTUT//IO5uM4B/
lQfC5PjJ9ipzklmeYsSenbGeGvO0Hj6csd4XdL9QHo1Wd/r+TfsJnTxMHgor
9d/gTYrAsrX0YMzaLaz0ADKKfnkLo09Iw5iXkcwCgu7qPwZPL/kSJ7PLGlJ0
14O2za96VaZfY8jFWxktSvKal6421ShggNERi573zMaqnedRUCHdtRdaqzsG
DaB2xnqCKKx7+o2KGF4jGNfTy3NxdPM8TE1qjzoWgziUGcxwthiIR/61Dgcu
Cd+FJk135QCoAaZg+mWBBuueBgrglE/YuStRmv4TPpn/DwxPkO4T8bqED+ZH
KJIC8gjlg4xQcrHQRmf/ASV6KLN8bnp2bPm9aB1sVKYKJOGE48dkUShRXW2O
ksuHsGneVAxvz2QO4Uh5kNADmRwc+eQtPJYU7w2ZloMw+fX1OKgNGTYWPj0q
KBa97n0R7+9K8fSogOhKUWnAWDyzdBtO5ZSTopIeKU9mn5wDDJb87Lq8GdMS
YxFqDUaD3tOw+ZKLmGH2y+rrX8PUZ7bgiisL391RH+IHL8RpZ8TQT3ClvHqO
5a0eEY0Ju3NQWXgUf28agW6v70dGYQYOLx6Meqq1PonFOsnKPnMQ3SFV4hzb
A/+9yvX3nD0Y0vhWrE8X+35lprK41+knmoM65WUvigR8yrZpT3x6rUKUprFn
Fl90YiY6dH4LyaXaEsi3XPWGTt3hhBOl+CSebx2NAf8+jtzMnYIoOzPy8Pve
FXgwrglGrxO+SKcrit7IRpq9+U513EU48Vwr2A3k9U09AomFZBRo7P5bIVHQ
G8AowspLlcrCM/hw2mC0jQyBxWgwackrXHiHjphp9MvLVd6mjVtVhl1SLnYB
I3SmMtZbJsmus4jUim0a0umh6THGesskb/kMaYzzbrlbxlIk1YPSY4z1KFs7
zGqRpPW/VTiaYeCQ54hMwPh3z6CI3E3VHqfBZypjvTX+SWqXeoY55l4cytfu
yXIf0QDSNPplyv4PkkeVz3+5K5B/Yj7axwjlJPPJEcYHQk+Si9f5J4eZUKZ3
3++PepWDH3dHxGkIvzAtxm9fL8TjI7uiabgDZpMVwXUaIWHAPZi15ihyK8hj
kr+i6N3REHOy/Dh7APeOfhRzN3yP01fy4SovwfVfd2D+mBhYjSHoNPsYCsiZ
BT2RNG5N1JaK5ZSVOeY+HvWBcCDdb/Alb6w7Antzq0VefZ/BKXUyd3kRMs58
jXm8nbgIE3H7Rn66Fwgb2v0G8ZrNC2EyzhytHsXWa+UiXCxKb9ik/NPP5KiS
5K0oRXbKHiyZ0Ag2owNtnjyA3MqAVGNlrdxVv/SRiInou3EwMEw0Ufz/oUDK
FCmgLhBSyrv3+E8Sj3wEr3+8E79cykFJWQmyk7/DgnENON9b0ejBb5FVcUMN
5FDCRwnSdq3AjAl90S66FuxmC+zOKLTokoQp87YhraRmwoeWHKRhSY+2Ruq6
QXXEVKWIhakHZTAg5VVJ0xV/TCSnGwOhE8hAI5qQP7pw5Zu5uD+xJSKCLLAE
10Wrfg9j4Q/X+XAR+HqWx24Fsvc8jlYOg7SONcEY0hEvHi3Q3OPEvJAtu4gP
eoSj3qA5+GLfJ+jZqA++/i0Vhz+bi7ubhyBiyGe4Rt5Wwswibz/GNu3Ef+CD
uF5s2/x+fpTRmzl4lp8/YFjTHth0pery083vQGo6pNppm9JkvNW+DlpN+RjH
k79CHxULV8oidG47BUfJe4GYWbjLkL5hNCLlxITSk8uRvnEAWo3egevkTWNs
iHQIdwRPrPoHBrapi6A6Yq9wuy7g3Z5x+Nv+vICh84e+jSuQNjfB9DOQNuK8
j8/fVqI0NwOX0y4jI69U8BNpOygrDiryT2LTnPvQu1kY5BwkDBaENe+Ne1/Z
gOO5FQHhQPlyNxeecn9agNGN7FCSH+Is29ZwBOb9mIsKt7tuwBxCUXx2EQY3
bovBD83CwtWf4Ku9R3Hq1/NIuXABKclncOKnPdi6djFenDwUcY0HYP6pIgTC
T9n+6rqEzbMXY9dVl7Jdqyzjeyx9eTMuuaQXT9UwyhrJ1vR+KIaUzv8DSfk3
Qf1DWZLq2Qj1SPt92GTgpS/H1c13oXXPp7H+SDoKyz37/Nw532PMmEU4q2xQ
qFn1XSlY2L0LXuPmUfIcnN/ruXJYLOKf2oPsCs/nJAhcWRYd3ECa1CwRWzMq
paWZA+WZX+FvrRtj3Jo0uGSJvckT7zAxGzRvH0bVr4v+C/bhUoGLDwzSus0h
xL3CE2+iV8PueE2a2tQcb5Mw1fmwd20hDaA9kRdncpfWj0eTlg9ztimvCafK
8+zi5A8wuXtDhHJx2EB+NDhIBndFDvZOT0DskKVIvrKz2lZQtluVJGPpkFgk
TP4nOjprIM6YBMfJl0gp0xsxWPq1KmJZgtyA1ZUnipTit+Uj0OWBJdiVnIWS
Cs9bEgLSueg4nurQR5gBB75csgg3coZGN8GUzaeRUSh2xmrJVXIWr7V18Miu
YRvyGCvHtS33o6H1RvinAEee7YC29y7BznOZKK6ufwqO4JG43h7/6OLPLIwm
t3G+mLz5HPLK3YHcblXUKT2PBR2CBTfwuUaDRqSpnskqkX/8XdxzSzSCzUIw
qzEeN/McXZkhqhaejXVcrNmmpnj/yen8Ub6Tsm8qcU0EDQIJqH5QpuBEmkXK
IxEpygUSFm4QWdINIc8WvxKk7lyO6eMT0TbaCZvZAkdYLDoMeQRvbU9FicYW
v8B5ipngicPuxyurvsLR37NRXFaCjBMb8XTnWjBZojFu3SVlP7SfbOW8dfHJ
WWhl52ZzrWbiVHG1SPGJqt61AGPEUHwf2C0Q78XqQnyX7lmsuq7uxpKXPhEW
q/LSrPDn6Whh46WfFaj0ynr813dxW6OWGDBpJt5ZvQnbfziCk2eTcf5CCs6f
O40Th3Zjy5pFmP3wYLRpNAjvnCmSpsBSxn7Ew/jXml04mZ6P0tI8pO7/Dya3
DYbR2gB3bbjsvW9dkKDKIkadfMg78g7GVE0+2GNH4e2fhOSDkhKTZ3lGC0JD
7DCbbQit2wydkx7DO99eEp68DQSYnlTLKXzy2iT0axUBq1HMtRiMNtRt3Q8P
vLoRv+TJn0WusmpzBMBWnTFy5Wci/WI6rue7hJVTSM2xialpUt7TbTmlrfeC
pBs2jtRwJuevNn/54n+izV+++J+1q/qrLsUpn2DW2M5oWNsGiz0MjbuOw8yN
yfxDeIGMhSJpB8qvfoaJDUPQcOL7OJZZgpLMY3h/YkNYLfUxbkM6P8gHFOaV
0chdhJPPt4Q9OAELUzzfHExZiIRgwNH2VZwtqcbmAv6rhufwZlwQNzAlYkeW
J92atQOJtas1d/N8d3c/xkZyVcg6WJsI7xyo1gaJnD0YzH+B2GBFwwmrcDSj
GMUZR7FqAucJU230XnAOJfrTrRjJqe78Q7ivATdiWyPQvUccop1WmK2hqB83
BFOXH0JOgHukFIOUX8JH3ZwwcAZZlOIKfIrBT4rKcGlNP4SZnOi2/HchnU16
GoC5qxSfxYIBdWALT8TsL84gq7gQV49/jtenTMGh3IC6irjusqGi4BTWzRiD
ro3C4LCGoH6HkZixTvtRqL+i2c3TZrGEXNKj4zH+kVokHOnPfJMe6ajijYVS
JaZHtD0ZcorXZIpMT16TbiZT1JZpM70QI0Dafj0h5qe7WJ7aYiSp8eJ1+Wtk
pMes/MRYawaMveYfSfkFCUxom8OCX5kiE9peYsGvTJEJY68Err8uxvT013AX
DWN+uos0oDQlA6wJoeoQQtlgxnqksu7Vl56V1f+xmCGMZaSX47C2/Yte9ejd
TLIIZcIzC5TA9hfQ/pz0biZZyEDjbx3hS1WpULnwjzlPFv7wjF3I2L8aL0zo
h7iYMARZzLAG1ULd2HboOe4lnCzkW1Wi6NwaPDGkHSKDLTDLOYzl/0aXWvDk
lYl7iSwoS30P3ZxSst7ZDStTyyAuuWNRevFzzBqVgOgQnm4tNOg4HM8sXoLO
Tnjlq/lkxJlF49AuwgajQX0tINnEXs2vfsuR/eNKPDWqK5pGBMNqtsEZ3Q59
J8zAil1pwo20g6LFzgl/ooRdv0fnDUN9WxCa3jkXX/5yFYVlLhRknMOBzQsw
ddz9OJDrFnYJvN0xBAZTBAYu/BEZJSXIOv1fPNe1lggPmmT8lKcU596MQ5DB
CKvTyikdhLg3zwl3UASDlKZgUddQGMz1cPviA0jPz0PawRV4oGWQ+ByW2ngF
P+EBPqkQFIe5J4vEjV/ugEWUnBckGD9337OICzbC0exBrD5yDcWuImT9fhQ7
Vr+KSUkTsT/XLRnwVwkOfKucH/6OpjYTaicuxflSt+duU85uDOKzKbV64rNr
lfIH24t+eR4t7To2CxH27UxvbgNszTH146kQTltMx4kiSV9+P04EZ51avbA1
U6LuQMHhx9HU6mMyjkO/MINQtjNb3uQYqIAmWfWyNKy61ckZPApjdwivwRRf
oquyTsVVbO4fDqM5CnfsyhaqeKwjPeAWLrwDVGbO58v61NaxTiTyDjyEWIsB
jrav4WzOWbza1gFYYvHQgTxRZdcFLOGEM5rCkThnO85llYhIkdJxvuZRI8J3
p6R/Eiq7O/nNi/U4/zhvxYb0iqNqy5iF1Ni9MRyKQ7vgo0vltiosB/GPJSgs
fST0/LsPvsmSWNbievN17BgbBZMhBB0XpcDFxcOURR0RbDAhaqzwiIBQ05X+
NeY+OBDtY8O5GCnu+REfd7TBENbfD8P4LyW/k3QvRtYT+SmvC+Yo7Za4HvCx
FAfSATxIayfi6+vuqpYa4OUcLRnsrTD7VLFJ6iXlVzZxyOc0d3YXXibLl/Iv
ku3ORXYjJ8umK+VQXsCc9Y3gb0vDB/FTAatl/JeKa12Wivf4MOhogzlnSmSi
5ZfXgiuFveULOFnsHYH0kRQmPMsh0mqmLUloHF56ZTG2nMwUxgk+H5q6shuc
XMQO7y88EikqXn4FG/kebXDi1pWpQl7eXZaOz56fiX9vO85FbhdcBRex790k
RFpsaDJlL//MIZvR1KLW9UNU/sc/9DQNrR0W1Ok3B9uSs7gx7ATWTG4Oh6Ue
klaLO5R9ozcfnwZI8WknOT5J7EWpGlNA3hffXTqLNU/chjaRITCHNMKw2CAu
OtbF8C8zhe2SsqSZXw5HXZMBQfFv4lypWHb102FcGT+pMMBkd6J+614YP3sT
kosq1cYT52JWreAjShnBLqWIU8HdGXsW4tFB8Yh22mFxhKFR59GYse4MCivd
P5IGvcfEQa/XYpwrkb9MUcVsl9XzjSDpvYNJiLY50Hjs69hy/AoKXCXIv3oW
ezfOx9/H3MfPN1pQiSUr850yZB78ADMn9kf7hnUQYrXAHhqO+k0TkHjnyzjF
TffolFgmlzD8f65ZXVs=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Sin", "[", 
   RowBox[{"paramfile", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.591629871042259*^9, 3.591629893581501*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJw9WHlczWkXv2IwZqQiJeFaSxmipI2+LWTQnva47XvdpUhjuVIaCqHJVq+r
jCkqJRWmuBQtSAtFoYssSYtBZNDr/XSe1z8+p/M7z/ec83zP8tzpPpEO/nIc
Doc3jMP53/9D//pM1atqixPnPb9Cf8CtdcXfBgd7TYfE0fhpx+G5pm4NpFdA
RVHc3rJRSaSfgHeb9hv8YvGG9KowLsrVlS/pJr06ti9ynen1hZ3HRdJpc7fx
ZZ30/Qy0qQSFpG1rIf0slHvOWDe+tpf0c/CzWuaqmJI3pNfElmVtbtuOd5Cs
hcMci0C7jEf0/TzsGfe+KX/jY9LPx6ffArr9J1eTrAPh2jvhpm9f0fcL0ST3
0zbZ8R7SL0Lj6MMnK9sZvi4yLQvO2kx5RXo9mIy9oZkkfUnyYpisWq2qkMby
p49vzmZH9eXYeUtQMvjefcwndp4Bxq33zrs07DbJhog/bmbMH/+CZCOsaNvg
yK98QvbG0FFuuRlv0EJ6E2jnLTK00GTxL0VOUXTy21PnSV6GgTm+uheaX5Ns
iiiN+gkVphUkAzucf5+SpCsZksXAo5Ku8gqnp6Q3wzzD/9SOdKshvRmOz7ig
EjMsl/DNEaNputjim2xIFpvjd9MF9nu6X5LeAiV92SMF2xrI3gJ7vK4Ne3Xm
BZ1viQctrvFL9YkvYkvc0N3f/IHL4lmOM9rrsvo6e0i/HDwlI3GVUzedvwKq
t/L3XTz1lPQr4Kk/bv+O0wzfCmobQhx6vxL/xFaYpeKbGf/hCelXAsr3z7+O
IT6KV8LwWPfGhA0s/l/BSVz4xF5UT+f/CvnrFrfym8kfzipMMpzWEHKZ+CVe
BbNmZcd4HotvNThJJ/TzOcz/1YjZ/UHP6jjjxxpUNS7iZQ4w/DWQK/R5GLuX
1Ys1jqn3z81bforsraG+K9leW535ZwOd5UdPvj3L7s8GN/ssfSXzWX5sYbaY
fzviHIvfFiWzD34zlmP8tUNG+7GIk8ceDMmwg7v1Lj+H2e30vR2KFFcr5zxq
HzpPaoeGyhdiBYtmsreHd2v2wk2HHg7pYY+43PPakY5Uf2J7TPW7aa8nIP5L
7fGzfat882ZW7w4ItBIqlUy+R/YOkEvp7FSrovyIHcDLbUk31Se91AEjC+UL
w3QZ/x1hlprQfd+azoMjSq+73dJ8wvjkiDloTZAoEh+kjsi7+UlpyYxGsneC
wm/B6S7u9yl+J5zxq6kecGP35QSPY3FGpZVdZO+EXHtxhG8W5YuzFvJnl5W+
7KX6wFpczvus0ZqQQflbC7eQuDT9QZa/tbigNcVWKnxA+M7INe663xp+h/x3
hlFHtlDpVRvhO8Pw4vlFkbOI31JnHFpg0KCC/YTvgntTiy5n2P9B9i441mfW
GPrqOeG74NLS7h8+670mexdkl4e/L8ph/ccVtmnja7V5JMMVNnmlzbtKjhG+
KwT5ldYKcnQfUlc4fJr74sIeZu+Gf5I1LWcl0f3CDX8tuVQ57AvpxW6w/8/y
bRkJ1H+kblgW9XGEiqeM/HdH1/aCn2L+j+8OvX3ppU+76TyxO+wUbyoefszs
3TF1+q0xvxmx+/dAsp/8bf0pDN8Dbf8qNDmsriN7D6g21LW0f6B5IfUAt1jn
ytFs0nM8oX3tVJ2d9zOy90SahanSqyBWL57YOXrnj91v7lP8nlCLrXB6tpDx
xwtjhw++exJB9QQvvGiqS57VyeL3gpmlVm9q3D3C98LHtkTVOz0sf+uwIsG8
YuN2mh9Yhwr+wgSbDNYP1mH780UdWrsayX4dMkdfdNr1Wkr26zFBzfj2IZ8b
ZL8eqpn997h7Swj/u/z+in2iB8036XrM0tvrlCbXTPY8IK/TWthD+eHycNaN
k+CyluoHPFgYyK0rLyZ/eTxMO6jy/Nr1VjqfB5fNz5/snEh8lPCwpfUHaVBF
Dvn7/fvyHhfTX2m+yXiY61p22jiW9BxvLPuoYqXN9guuNxa8jdphfGAfxeMN
pXRbuRNGF4ZknjdMUgfUA/OvUn68kau4/WjKw0LC90ZWcOrOsd8OULzesJ65
U1RrT/7LvPGvhtoi82aWfx98+/B2Vfeq1CGZ64M3xv7yielFhO+DwN8n99le
ZfH74NChsuirDRcJ3wfVdl/P+kmp30p8kDj79qRsAes3PphsJf3GszxH+D4Q
Luj0avxUTfi+4HbOuOr/I9lzfZH1KXn4ylVUv/DFArtjJuWRjwnfF3Uc2wmX
d1P9iH1x6Q/rrrXrif8SX/ibvnB460R8lPpCYay/SaiQ+CPzRczIwMOjKtn8
8MOkR91PrY3pvrl+sP77xpWIsfQ9/PBly23reP1LlH8/9MSULFiU0kr4flDS
rxZnlTZR/H44ojboY5p8nfD94KA/wqO3Pp/i94Pbms8ZTgp1FL8/mjwWywyV
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
cmvvlf8CZNNONQ==
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, Automatic},
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{{3.59162987964625*^9, 3.5916298939715242`*^9}, 
   3.591633038108864*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"180", 
    RowBox[{"Sin", "[", 
     RowBox[{"paramfile", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"PointSize", "[", "0.015", "]"}], "}"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Frame\>\"", ",", "\"\<Angle\>\"", ",", 
      "\"\<Fitted gaussian angle\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"14", ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "Bold"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.59162990554079*^9, 3.591629988689637*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], PointSize[0.015], PointBox[CompressedData["
1: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
rIVYs8vyg9k4kfq/VJaZJQ==
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{0, Automatic},
  BaseStyle->{14, FontFamily -> "Helvetica", Bold},
  Frame->True,
  FrameLabel->{
    FormBox["\"Frame\"", TraditionalForm], 
    FormBox["\"Angle\"", TraditionalForm], 
    FormBox["\"Fitted gaussian angle\"", TraditionalForm], 
    FormBox["\"\"", TraditionalForm]},
  ImageSize->500,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{{3.591629908054325*^9, 3.5916299892893467`*^9}, 
   3.591633041535975*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztfQecVcX1/9m37719W4Fl2V12gaWzdEFEEaUJ7IJIUTQUFbFiEkvUGGuM
GhtFA7ZfELAnMRKjKT+NXVQwJsbEEv0pNopEiNSl7AK7/zv33rlz731Tvnff
4j+fJH4CvNw7d+a0OXPmzDlnTph72bxzLph72flnze1cc8nci+edf9alncdf
dIn1KDuLKKvO+jOqM7HfTUT8rybrf0272V/sifm380+cmra/TKNaWz20HkUv
b29KyB/H7cflVL/hN3TN1IFUUZCgeKoVdRh0Al125900pMhrarcMfY4+i9kP
c62/D9C2N5fRJVOHUteSfErGc6iooi+NmnUFLX15Pe1rbKI/NQePbPtxd2qq
/5SWDC2krHgpTbzzDdq0ayet/+NSOqNnHsWoRXBxnjU10o7V36d++THK7XYm
PfCXzbS3YQ9t/eJteu6BG2nupNm0ZkdTBrhYj3e8ShNKLKhbHUO//2ejQ8P2
VPfWhdQ12YKo7F9PK44qoqzscjrpua+p0Xr21+bD3YmaGj6ju60OY9nFNOKG
Z+jjrfvsTpu2Pkcjmguk7NnO1TS11KJP0VH02KaDf4sI80h6fqsr/wlq2PQs
zT9zLA3oVEx5iRhlWZPQlhcqoaw2YyRwjKQXtrrPtr3k79JrN7pNVhDeHa/T
lNJY0u42m7KKx9Er7qs3/bBni1Gs/xL8b9bTOvd5qhdd+/e99oRis7dp6/M0
0nqe6Hgm/bkuBGleP1qwtt5+1rj5NzS8lfPsto+dZ01f/8H6NisATtP+dXQf
m0W5vemGD/fFXNod+PJRsp5SqudV9P5eSLiT4nFhP7ru+jvpd+//k01zp89u
1lCb6Kkrr6Z7n37HmqwN1FC3gVbfNYnKEjnUZd7rtKMxhI7VZeXMB+n9bbtp
/VOzqTLhPOsw6yH72bpfz7KeZVFe/1vp4318sh6kbasuourcBLUdfQM9vXYr
1W15lx45tzvlJkpp0gPrqaEJ0zytA49f3Ph/9MjFtdS7rIDixce5BDxIXz15
PLXLttpYcpSdKqL21cfQjGtX0to97jQuEt0UHU533HoujejWhlI5hdR+4FS6
9ok19Iurp9HgykJK5hRRpyPn0N1/28VmkfN5yvp7P21ZtZjOG9efKopSlMht
Q1VDptEVP/+Qdjc2/VmLyn78rUwYswNiXYevTd/k7xqPUI2056Nf0OUnDKT2
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
6/8BRE4a5g==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"validinds", "=", 
   RowBox[{"Position", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"curves2", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "\[LessEqual]", "0.05"}], "&&", 
          RowBox[{
           RowBox[{"curves2", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "\[GreaterEqual]", "0.001"}]}], 
         ",", "1", ",", "0"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "curves2", "]"}]}], "}"}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"curvesv", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"curves2", "[", 
       RowBox[{"[", 
        RowBox[{"validinds", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "*", "10."}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "validinds", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"curvesv", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"PointSize", "[", "0.015", "]"}], "}"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Frame\>\"", ",", 
      "\"\<Curvature (\!\(\*SuperscriptBox[\(nm\), \(-1\)]\))\>\"", ",", 
      "\"\<Filtered Curvature\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"14", ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "Bold"}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.563794028649172*^9, 3.563794029515037*^9}, {
   3.563794223945842*^9, 3.563794398891564*^9}, {3.563800422827291*^9, 
   3.5638004303749657`*^9}, {3.563801919766124*^9, 3.563801948355521*^9}, 
   3.563842739189663*^9, {3.563842799012807*^9, 3.5638428174775867`*^9}, {
   3.5641439158116007`*^9, 3.5641439181856318`*^9}, {3.564223697790654*^9, 
   3.564223697889617*^9}, {3.591573950661242*^9, 3.59157395664865*^9}, {
   3.591574321724102*^9, 3.591574321967503*^9}, {3.59157460493504*^9, 
   3.5915746102837467`*^9}, {3.5916284376822157`*^9, 
   3.5916284383943787`*^9}, {3.591628564697605*^9, 3.591628573550354*^9}, {
   3.5916293735927153`*^9, 3.591629374882154*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], PointSize[0.015], 
   PointBox[{{1., 0.4830387960066952}, {2., 0.28910000868627134`}, {3., 
    0.449639649585611}, {4., 0.3142285391707666}, {5., 
    0.37822265546556466`}, {6., 0.03614718135378237}, {7., 
    0.47314469852775315`}, {8., 0.476873691162498}, {9., 
    0.022128649038888393`}, {10., 0.4218591427158813}, {11., 
    0.364386280422831}, {12., 0.35657084189193494`}, {13., 
    0.3886003659188202}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{0, Automatic},
  BaseStyle->{14, FontFamily -> "Helvetica", Bold},
  Frame->True,
  FrameLabel->{
    FormBox["\"Frame\"", TraditionalForm], 
    FormBox[
    "\"Curvature (\\!\\(\\*SuperscriptBox[\\(nm\\), \\(-1\\)]\\))\"", 
     TraditionalForm], 
    FormBox["\"Filtered Curvature\"", TraditionalForm], 
    FormBox["\"\"", TraditionalForm]},
  ImageSize->500,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{
  3.591573890829743*^9, {3.591573948742609*^9, 3.5915739577908*^9}, 
   3.5915743226008577`*^9, {3.591574605758465*^9, 3.591574611013291*^9}, {
   3.59162525748602*^9, 3.591625261609049*^9}, 3.59162839980235*^9, 
   3.59162843882351*^9, {3.591628528728201*^9, 3.5916285318989563`*^9}, {
   3.591628565892438*^9, 3.591628574009263*^9}, 3.59162900602855*^9, {
   3.591629304600202*^9, 3.5916293334210787`*^9}, 3.591629375403988*^9, 
   3.591629854932767*^9, 3.59162999210935*^9, 3.591633043152101*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "validinds", "]"}]], "Input",
 CellChangeTimes->{{3.591633943082452*^9, 3.591633945321377*^9}}],

Cell[BoxData["13"], "Output",
 CellChangeTimes->{3.591633945611597*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"curvesv", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Curvature (\!\(\*SuperscriptBox[\(nm\), \(-1\)]\))\>\"", ",", 
      "\"\<Counts (out of 400)\>\"", ",", 
      "\"\<Filtered maximum curvatures in the shadow\>\"", ",", "\"\<\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"14", ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "Bold"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.591628535963558*^9, 3.591628539099774*^9}, {
  3.591628588551536*^9, 3.591628636854793*^9}}],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
   EdgeForm[Opacity[0.7]], {}, 
   {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
    EdgeForm[Opacity[0.7]], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{0., 0.}, {0.2, 2.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{46.26000000000001, 187.42000000000004`}, {
         34.37990245641829, 114.78490933100476`}}],
       StatusArea[#, 2.]& ,
       TagBoxNote->"2."],
      StyleBox["2.`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[2., {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{0.2, 0.}, {0.4, 6.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{186.42000000000004`, 
         327.58000000000004`}, {-124.43011129275463`, 114.78490933100476`}}],
       StatusArea[#, 6.]& ,
       TagBoxNote->"6."],
      StyleBox["6.`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[6., {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{0.4, 0.}, {0.6, 5.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{326.58000000000004`, 467.74}, {-84.72760785546139, 
         114.78490933100476`}}],
       StatusArea[#, 5.]& ,
       TagBoxNote->"5."],
      StyleBox["5.`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[5., {
        GrayLevel[0]}], "Tooltip"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesOrigin->{0., 0.},
  BaseStyle->{14, FontFamily -> "Helvetica", Bold},
  Frame->True,
  FrameLabel->{
    FormBox[
    "\"Curvature (\\!\\(\\*SuperscriptBox[\\(nm\\), \\(-1\\)]\\))\"", 
     TraditionalForm], 
    FormBox["\"Counts (out of 400)\"", TraditionalForm], 
    FormBox["\"Filtered maximum curvatures in the shadow\"", TraditionalForm], 
    FormBox["\"\"", TraditionalForm]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  ImageSize->500,
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.1]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.591628539397612*^9, 3.5916286073639317`*^9}, 
   3.591628637650427*^9, 3.591629340658655*^9, 3.59162938017452*^9, 
   3.591629743354411*^9, 3.591630000334416*^9, 3.5916330458919573`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Norm", "[", 
         RowBox[{"paramfile", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"validinds", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "5"}], "]"}], "]"}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "validinds", "]"}]}], "}"}]}], "]"}], 
      "]"}]}], "]"}], ",", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Norm", "[", 
         RowBox[{"paramfile", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"validinds", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "6"}], "]"}], "]"}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "validinds", "]"}]}], "}"}]}], "]"}], 
      "]"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.591629673044013*^9, 3.5916297278179483`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"14.34443227806484`", ",", "23.82652431955557`"}], "}"}]], "Output",\

 CellChangeTimes->{{3.591629681984017*^9, 3.591629728337549*^9}, 
   3.5916300220983677`*^9, 3.5916330538177032`*^9, 3.591633116611668*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"10", ",", 
        RowBox[{"Norm", "[", 
         RowBox[{"paramfile", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"validinds", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "5"}], "]"}], "]"}], 
         "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "validinds", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"10", ",", 
        RowBox[{"Norm", "[", 
         RowBox[{"paramfile", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"validinds", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "6"}], "]"}], "]"}], 
         "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "validinds", "]"}]}], "}"}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5916295689300947`*^9, 3.591629659338031*^9}}],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
   EdgeForm[Opacity[0.7]], {{}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.5], EdgeForm[
     Opacity[0.7]], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.5, 0.}, {2., 2.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{11.5, 80.1}, {33.01830058568629, 
          97.84747753491152}}],
        StatusArea[#, 2.]& ,
        TagBoxNote->"2."],
       StyleBox["2.`", {
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[2., {
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2., 0.}, {2.5, 4.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{79.1, 147.70000000000002`}, {-30.810876363538938`, 
          97.84747753491152}}],
        StatusArea[#, 4.]& ,
        TagBoxNote->"4."],
       StyleBox["4.`", {
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[4., {
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2.5, 0.}, {3., 6.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{146.70000000000002`, 
          215.29999999999998`}, {-94.64005331276417, 97.84747753491152}}],
        StatusArea[#, 6.]& ,
        TagBoxNote->"6."],
       StyleBox["6.`", {
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[6., {
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0.}, {3.5, 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{214.29999999999998`, 282.9}, {64.9328890602989, 
          97.84747753491152}}],
        StatusArea[#, 1.]& ,
        TagBoxNote->"1."],
       StyleBox["1.`", {
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[1., {
         GrayLevel[0]}], "Tooltip"]& ], {}}, {}, {}}, {{}, 
    {RGBColor[0.6, 0.24, 0.4428931686004542], Opacity[0.5], EdgeForm[Opacity[
     0.7]], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.5, 0.}, {2., 2.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{11.5, 80.1}, {33.01830058568629, 
          97.84747753491152}}],
        StatusArea[#, 2.]& ,
        TagBoxNote->"2."],
       StyleBox["2.`", {
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[2., {
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2., 0.}, {2.5, 3.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{79.1, 147.70000000000002`}, {1.1037121110736763`, 
          97.84747753491152}}],
        StatusArea[#, 3.]& ,
        TagBoxNote->"3."],
       StyleBox["3.`", {
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[3., {
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2.5, 0.}, {3., 5.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{146.70000000000002`, 
          215.29999999999998`}, {-62.72546483815157, 97.84747753491152}}],
        StatusArea[#, 5.]& ,
        TagBoxNote->"5."],
       StyleBox["5.`", {
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[5., {
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0.}, {3.5, 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{214.29999999999998`, 282.9}, {64.9328890602989, 
          97.84747753491152}}],
        StatusArea[#, 1.]& ,
        TagBoxNote->"1."],
       StyleBox["1.`", {
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[1., {
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3.5, 0.}, {4., 2.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{281.9, 350.5}, {33.01830058568629, 
          97.84747753491152}}],
        StatusArea[#, 2.]& ,
        TagBoxNote->"2."],
       StyleBox["2.`", {
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[2., {
         GrayLevel[0]}], "Tooltip"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesOrigin->{1.5, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  PlotRange->NCache[{{
      Rational[3, 2], 4}, {All, All}}, {{1.5, 4}, {All, All}}],
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.1]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.591629601589019*^9, {3.591629635775012*^9, 3.591629659750716*^9}, 
   3.591629741223743*^9, 3.591630025841928*^9, 3.5916330545978527`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1004},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"8.0 for Linux x86 (64-bit) (November 7, 2010)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 1217, 20, 50, "Input"],
Cell[1777, 42, 147, 3, 30, "Input"],
Cell[1927, 47, 193, 4, 30, "Input"],
Cell[2123, 53, 394, 13, 30, "Input"],
Cell[CellGroupData[{
Cell[2542, 70, 101, 1, 28, "Subsubsection"],
Cell[2646, 73, 752, 24, 30, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3435, 102, 105, 1, 28, "Subsubsection"],
Cell[3543, 105, 1635, 47, 30, "Input"],
Cell[5181, 154, 2484, 81, 50, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7702, 240, 108, 1, 28, "Subsubsection"],
Cell[7813, 243, 704, 19, 88, "Input"],
Cell[CellGroupData[{
Cell[8542, 266, 188, 4, 30, "Input"],
Cell[8733, 272, 100, 1, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8882, 279, 133, 1, 28, "Subsubsection"],
Cell[CellGroupData[{
Cell[9040, 284, 8197, 183, 525, "Input"],
Cell[17240, 469, 996, 15, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18273, 489, 6422, 152, 354, "Input"],
Cell[24698, 643, 38867, 653, 429, 16686, 288, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63602, 1301, 1020, 25, 55, "Input"],
Cell[64625, 1328, 16990, 287, 351, 4514, 81, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81652, 1620, 269, 7, 30, "Input"],
Cell[81924, 1629, 5369, 93, 223, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87330, 1727, 1018, 27, 50, "Input"],
Cell[88351, 1756, 27372, 457, 335, 5552, 97, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115760, 2218, 2652, 66, 93, "Input"],
Cell[118415, 2286, 1466, 30, 342, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119918, 2321, 133, 2, 30, "Input"],
Cell[120054, 2325, 71, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120162, 2331, 851, 20, 55, "Input"],
Cell[121016, 2353, 3150, 90, 355, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124203, 2448, 1216, 37, 30, "Input"],
Cell[125422, 2487, 249, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125708, 2497, 1116, 33, 30, "Input"],
Cell[126827, 2532, 6768, 203, 244, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
